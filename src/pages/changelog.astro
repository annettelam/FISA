---
import { getLogsBySchool, getAllSchoolNumbersOrderedByRecentChange } from './api/changelog'
import ChangeLogTable from '../components/Changelog/ChangeLogTable.astro';
import ChangeLogSearchForm from '../components/Changelog/ChangeLogSearchForm.astro';
import Layout from '../layouts/Layout.astro';

const user = Astro.locals.user;

// Extract query parameters for pagination and search
const params = new URL(Astro.url).searchParams;
const page = parseInt(params.get('page') || '1');
const searchQuery = params.get('search') || '';

// Fetch all school numbers for pagination, ordered by recent changes
let schoolNumbers = getAllSchoolNumbersOrderedByRecentChange();

// If a search query is present, filter the school numbers
if (searchQuery) {
  const query = searchQuery.trim().toLowerCase();
  schoolNumbers = schoolNumbers.filter(schoolNum => 
    schoolNum.toString().toLowerCase().includes(query)
  );
}

const totalPages = schoolNumbers.length; // One school per page

// Ensure the current page is within bounds
const currentPage = Math.min(Math.max(page, 1), totalPages);

// Fetch logs for the school corresponding to the current page
const schoolNum = schoolNumbers[currentPage - 1];
const logs = getLogsBySchool(schoolNum); // Fetch logs for the current school

// Generate the "Clear Search" URL by removing the 'search' parameter
const clearSearchUrl = new URL(Astro.url);
clearSearchUrl.searchParams.delete('search');
clearSearchUrl.searchParams.set('page', '1');

// Pagination logic with ellipses (same as before)
function getPageNumbers(currentPage, totalPages) {
  const delta = 2;
  const range = [];
  const rangeWithDots = [];
  let l;

  for (let i = 1; i <= totalPages; i++) {
    if (i == 1 || i == totalPages || (i >= currentPage - delta && i <= currentPage + delta)) {
      range.push(i);
    }
  }

  for (let i of range) {
    if (l) {
      if (i - l === 2) {
        rangeWithDots.push(l + 1);
      } else if (i - l !== 1) {
        rangeWithDots.push('...');
      }
    }
    rangeWithDots.push(i);
    l = i;
  }

  return rangeWithDots;
}

const paginationPages = getPageNumbers(currentPage, totalPages);
const shouldShowBottomPagination = logs.length > 10; // Only show bottom pagination if there are more than 10 logs
---

<Layout title="Changelog">
  <div class="max-w-7xl mx-auto mt-10 p-8 bg-white dark:bg-gray-800 shadow-md rounded-lg transition-colors duration-300">
    <div class="text-center mb-10">
      <h1 class="text-3xl font-bold text-gray-800 dark:text-gray-100">School Change Log</h1>
      <p class="text-gray-600 dark:text-gray-300">
        This tracks changes made to school data through a fact sheet by an admin or user (after approval). Each page tracks 1 school.
      </p>
    </div>

    <!-- Integrate the SearchForm component -->
    <ChangeLogSearchForm 
      searchQuery={searchQuery} 
      clearSearchUrl={`${clearSearchUrl.pathname}${clearSearchUrl.search}`} 
    />

    {schoolNumbers.length > 0 ? (
      <>
        <!-- Pagination Controls at the Top -->
        <div class="mb-4 flex justify-center space-x-2">
          {currentPage > 1 ? (
            <>
              <a 
                href={`?page=1${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
              >
                First
              </a>
              <a 
                href={`?page=${currentPage - 1}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
              >
                Previous
              </a>
            </>
          ) : (
            <>
              <span class="px-4 py-2 text-gray-400 dark:text-gray-600">First</span>
              <span class="px-4 py-2 text-gray-400 dark:text-gray-600">Previous</span>
            </>
          )}

          {/* Page numbers with ellipses */}
          {paginationPages.map((pageNumber, index) => (
            typeof pageNumber === 'number' ? (
              <a 
                href={`?page=${pageNumber}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                class={`px-4 py-2 rounded ${
                  pageNumber === currentPage 
                    ? 'bg-gray-300 dark:bg-gray-600 text-white' 
                    : 'bg-blue-500 dark:bg-blue-600 text-white hover:bg-blue-600 dark:hover:bg-blue-700'
                } transition-colors duration-300`}
              >
                {pageNumber}
              </a>
            ) : (
              <span class="px-4 py-2 text-gray-500 dark:text-gray-400">...</span>
            )
          ))}



          {currentPage < totalPages ? (
            <>
              <a 
                href={`?page=${currentPage + 1}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
              >
                Next
              </a>
              <a 
                href={`?page=${totalPages}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
              >
                Last
              </a>
            </>
          ) : (
            <>
              <span class="px-4 py-2 text-gray-400 dark:text-gray-600">Next</span>
              <span class="px-4 py-2 text-gray-400 dark:text-gray-600">Last</span>
            </>
          )}
        </div>

        <!-- Render the change log table -->
        <ChangeLogTable logs={logs} schoolNum={schoolNum} />

        <!-- Conditional Pagination Controls at the Bottom -->
        {shouldShowBottomPagination && (
          <div class="mt-6 flex justify-center space-x-2">
            {currentPage > 1 ? (
              <>
                <a 
                  href={`?page=1${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                  class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
                >
                  First
                </a>
                <a 
                  href={`?page=${currentPage - 1}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                  class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
                >
                  Previous
                </a>
              </>
            ) : (
              <>
                <span class="px-4 py-2 text-gray-400 dark:text-gray-600">First</span>
                <span class="px-4 py-2 text-gray-400 dark:text-gray-600">Previous</span>
              </>
            )}

            {/* Page numbers with ellipses */}
            {paginationPages.map((pageNumber, index) => (
              typeof pageNumber === 'number' ? (
                <a 
                  href={`?page=${pageNumber}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                  class={`px-4 py-2 rounded ${
                    pageNumber === currentPage 
                      ? 'bg-gray-300 dark:bg-gray-600 text-white' 
                      : 'bg-blue-500 dark:bg-blue-600 text-white hover:bg-blue-600 dark:hover:bg-blue-700'
                  } transition-colors duration-300`}
                >
                  {pageNumber}
                </a>
              ) : (
                <span class="px-4 py-2 text-gray-500 dark:text-gray-400">...</span>
              )
            ))}


            {currentPage < totalPages ? (
              <>
                <a 
                  href={`?page=${currentPage + 1}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                  class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
                >
                  Next
                </a>
                <a 
                  href={`?page=${totalPages}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`} 
                  class="px-4 py-2 bg-blue-500 dark:bg-blue-600 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-300"
                >
                  Last
                </a>
              </>
            ) : (
              <>
                <span class="px-4 py-2 text-gray-400 dark:text-gray-600">Next</span>
                <span class="px-4 py-2 text-gray-400 dark:text-gray-600">Last</span>
              </>
            )}
          </div>
        )}
      </>
    ) : (
      <div class="text-center text-red-500 dark:text-red-400">No results found for "{searchQuery}".</div>
    )}
  </div>
</Layout>
