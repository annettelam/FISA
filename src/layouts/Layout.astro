---
import Header from "../components/Header.astro";

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <!-- Meta Tags -->
    <meta charset="UTF-8" />
    <meta name="description" content="FISA Application" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/fisa_logo_small.png" />
    <title>{title}</title>

    <!-- Theme Initialization Script to Prevent Flash of Incorrect Theme (FOUC) -->
    <script is:inline>
      (function () {
        try {
          // Check localStorage for theme preference or use system preference
          const theme = localStorage.getItem("theme");
          const prefersDark = window.matchMedia(
            "(prefers-color-scheme: dark)",
          ).matches;

          // Apply the correct theme immediately
          if (theme === "dark" || (!theme && prefersDark)) {
            document.documentElement.classList.add("dark");
          } else {
            document.documentElement.classList.remove("dark");
          }
        } catch (e) {
          console.error("Error setting theme:", e);
        }
      })();
    </script>

    <!-- Tailwind CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />

    <!-- Flowbite CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/flowbite@1.6.5/dist/flowbite.min.css"
      rel="stylesheet"
    />

    <!-- Font Awesome for Icons -->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />

    <!-- Custom Global Styles -->
    <style is:global>
      /* Define CSS Variables */
      :root {
        --accent: 59, 130, 246; /* Blue-500 */
        --accent-light: 147, 197, 253; /* Blue-300 */
        --accent-dark: 30, 58, 138; /* Blue-700 */
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          grey 60%
        );
        --light-bg: #ffffff; /* Pure White */
        --light-text: #1a1a1a; /* Dark Text */
        --dark-bg: #181818; /* Dark Grey */
        --dark-text: #e0e0e0; /* Light Text */
        --button-bg-light: #e7e7e7;
        --button-bg-dark: #2c2c2c;
        --card-bg-light: #ffffff;
        --card-bg-dark: #242424;
        --border-color-light: #e5e5e5;
        --border-color-dark: #3a3a3a;
      }

      /* Body Styles */
      body {
        background-color: var(--bg-color);
        color: var(--text-color);
        transition:
          background-color 0.3s,
          color 0.3s;
      }

      /* Dark Mode Body Styles */
      html.dark body {
        --bg-color: var(--dark-bg);
        --text-color: var(--dark-text);
      }

      /* Light Mode Body Styles */
      html body {
        --bg-color: var(--light-bg);
        --text-color: var(--light-text);
      }

      /* Button Styles */
      button {
        background-color: var(--button-bg-light);
        color: #333;
        transition:
          background-color 0.3s ease,
          color 0.3s ease;
      }

      /* Dark Mode Button Styles */
      html.dark button {
        background-color: var(--button-bg-dark);
        color: #f5f5f5;
      }

      /* Header Styling */
      header {
        background: var(--accent-gradient);
        color: white;
        transition:
          background 0.3s,
          color 0.3s;
      }

      /* Dark Mode Header Styling */
      html.dark header {
        background: rgb(var(--accent-dark));
        color: #e0e0e0;
      }

      /* Reusable Button Classes */
      .btn-primary {
        @apply bg-blue-600 dark:bg-blue-600 hover:bg-blue-700 dark:hover:bg-blue-700 text-white px-5 py-3 rounded-lg font-medium text-sm text-center transition-colors duration-300 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-300;
      }

      .btn-success {
        @apply bg-green-500 dark:bg-green-500 hover:bg-green-600 dark:hover:bg-green-600 text-white px-4 py-2 rounded transition-colors duration-300;
      }

      .btn-danger {
        @apply bg-red-500 dark:bg-red-500 hover:bg-red-600 dark:hover:bg-red-600 text-white px-4 py-2 rounded transition-colors duration-300;
      }

      /* Reusable Card Class */
      .card {
        @apply bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-lg shadow-md dark:shadow-lg transition-colors duration-300;
      }

      /* Ensure Smooth Transitions for All Elements */
      * {
        transition:
          background-color 0.3s,
          color 0.3s,
          border-color 0.3s;
      }
    </style>
  </head>
  <body class="min-h-screen flex flex-col transition-colors duration-300">
    <!-- Main Header -->
    <Header />

    <!-- Page Content -->
    <main class="flex-grow">
      <slot />
    </main>

    <!-- Footer Section -->
    <footer class="bg-blue-700 text-white py-4 sm:py-6">
      <div class="w-full text-center">
        <p class="text-sm">
          &copy; {new Date().getFullYear()} FISA Portal. All rights reserved.
        </p>
      </div>
    </footer>

    <!-- Dark Mode Toggle Script -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const themeToggleButton = document.getElementById("theme-toggle");
        const themeToggleIcon = document.getElementById("theme-toggle-icon");

        if (!themeToggleButton || !themeToggleIcon) {
          console.error("Dark mode toggle elements not found!");
          return;
        }

        // Function to update the icon based on the current theme
        function updateIcon(theme) {
          if (theme === "dark") {
            themeToggleIcon.innerHTML = '<i class="fa-solid fa-moon"></i>'; // Moon icon for dark mode
          } else {
            themeToggleIcon.innerHTML = '<i class="fa-solid fa-sun"></i>'; // Sun icon for light mode
          }
        }

        // Set initial theme and icon based on saved or system preference
        const currentTheme =
          localStorage.getItem("theme") ||
          (window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light");
        if (currentTheme === "dark") {
          document.documentElement.classList.add("dark");
          updateIcon("dark");
        } else {
          document.documentElement.classList.remove("dark");
          updateIcon("light");
        }

        // Toggle between light and dark mode on button click
        themeToggleButton.addEventListener("click", () => {
          document.documentElement.classList.toggle("dark");
          if (document.documentElement.classList.contains("dark")) {
            localStorage.setItem("theme", "dark");
            updateIcon("dark");
          } else {
            localStorage.setItem("theme", "light");
            updateIcon("light");
          }
        });
      });
    </script>

    <!-- Flowbite JS -->
    <script
      src="https://cdn.jsdelivr.net/npm/flowbite@1.6.5/dist/flowbite.min.js"
    ></script>
  </body>
</html>
