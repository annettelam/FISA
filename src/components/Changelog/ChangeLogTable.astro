---
import ChangeLogRow from './ChangeLogRow.astro';

interface Log {
  school_num: string;
  field_changed: string;
  old_value: string;
  new_value: string;
  updated_by: string;
  timestamp: string;
  active_table_at_change: string; // Add active table to the log interface
}

interface Props {
  logs: Log[];
  schoolNum: string;
}

const { logs, schoolNum } = Astro.props;
---

<div class="overflow-x-auto">
  {logs.length === 0 ? (
    <div class="text-center py-4 text-gray-900 dark:text-gray-100">No changes logged yet for school {schoolNum}.</div>
  ) : (
    <div class="border-b-4 border-gray-200 dark:border-gray-700 mb-6">
      <div class="bg-gray-100 dark:bg-gray-800 p-4 rounded-t-lg">
        <h2 class="text-2xl font-semibold text-gray-800 dark:text-gray-100">School Number: {schoolNum}</h2>
      </div>
      <table class="table-auto w-full text-left text-sm text-gray-500 dark:text-gray-300">
        <thead class="bg-gray-50 dark:bg-gray-700">
          <tr>
            <th class="px-4 py-2 text-gray-900 dark:text-gray-100">Field Changed</th>
            <th class="px-4 py-2 text-gray-900 dark:text-gray-100">Old Value</th>
            <th class="px-4 py-2 text-gray-900 dark:text-gray-100">New Value</th>
            <th class="px-4 py-2 text-gray-900 dark:text-gray-100">Updated By</th>
            <th class="px-4 py-2 text-gray-900 dark:text-gray-100">Timestamp</th>
            <!-- Add a new column for the active table -->
            <th class="px-4 py-2 text-gray-900 dark:text-gray-100">Active Table</th>
          </tr>
        </thead>
        <tbody>
          {logs.map(log => (
            <ChangeLogRow log={log} />
          ))}
        </tbody>
      </table>
    </div>
  )}
</div>
