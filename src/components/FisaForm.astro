---
const url = new URL(Astro.request.url);
const schoolId = url.searchParams.get("schoolId");

let schoolData = {
    schoolName: "",
    schoolId: "",
    contactName: "",
    contactEmail: "",
    fullDayKindergarten: "0",
    grades1To12: "0",
    halfDayKindergarten: "0",
    totalFTE: "0.00",
    membershipFees: "0.00",
};
let errorMessage = "";

if (schoolId) {
    const apiUrl = new URL(
        `/api/data?schoolId=${encodeURIComponent(schoolId)}`,
        Astro.url.origin,
    );

    try {
        const response = await fetch(apiUrl);
        if (response.ok) {
            const data = await response.json();
            if (data && Object.keys(data).length > 0) {
                schoolData = {
                    ...schoolData,
                    ...data,
                    contactName:
                        `${data.firstName || ""} ${data.lastName || ""}`.trim(),
                    contactEmail: data.email || "",
                    fullDayKindergarten: String(
                        data.fullDayKindergarten || "0",
                    ),
                    grades1To12: String(data.grades1To12 || "0"),
                    halfDayKindergarten: String(
                        data.halfDayKindergarten || "0",
                    ),
                };

                const fullDayK =
                    parseFloat(schoolData.fullDayKindergarten) || 0;
                const grades1To12 = parseFloat(schoolData.grades1To12) || 0;
                const halfDayK =
                    parseFloat(schoolData.halfDayKindergarten) || 0;

                const totalFTE = fullDayK + grades1To12 + halfDayK / 2;
                const membershipFees = totalFTE * 7;

                schoolData.totalFTE = totalFTE.toFixed(2);
                schoolData.membershipFees = membershipFees.toFixed(2);
            } else {
                errorMessage = "No data returned from API.";
            }
        } else {
            errorMessage = `Error fetching school data: ${response.statusText}`;
        }
    } catch (error) {
        errorMessage = `Error fetching school data: ${error.message}`;
    }
} else {
    errorMessage = "No schoolId provided in the URL.";
}
---

<div
    class="max-w-3xl mx-auto mt-10 p-6 bg-white dark:bg-gray-800 shadow-md rounded-lg"
>
    <!-- Header Section -->
    <div class="flex justify-between items-center mb-6">
        <img src="/fisa_logo_small.png" alt="FISA Logo" class="w-24 h-auto" />
        <div class="text-center">
            <h1 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
                FISA Membership Fees Invoice (2023-2024)
            </h1>
            <p class="text-sm text-gray-600 dark:text-gray-300">
                Calculate your membership fees based on total enrolment. Please
                provide accurate information.
            </p>
        </div>
    </div>

    <!-- Display error message if any -->
    {
        errorMessage && (
            <div class="text-red-600 mb-4">
                <p>{errorMessage}</p>
            </div>
        )
    }

    <!-- Table Layout for Form Data -->
    <table
        class="w-full table-auto border-collapse border border-gray-300 dark:border-gray-600"
    >
        <thead
            class="bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300"
        >
            <tr>
                <th class="py-3 px-6 text-left font-medium">Field</th>
                <th class="py-3 px-6 text-left font-medium">Value</th>
            </tr>
        </thead>
        <tbody class="text-gray-800 dark:text-gray-100">
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">School Name</td>
                <td class="py-3 px-6">{schoolData.schoolName || "N/A"}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">School ID</td>
                <td class="py-3 px-6">{schoolData.schoolId || "N/A"}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">Contact Name</td>
                <td class="py-3 px-6">{schoolData.contactName || "N/A"}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">Email</td>
                <td class="py-3 px-6">{schoolData.contactEmail || "N/A"}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">Full-day Kindergarten</td>
                <td class="py-3 px-6">{schoolData.fullDayKindergarten}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">Grades 1-12</td>
                <td class="py-3 px-6">{schoolData.grades1To12}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">Half-day Kindergarten</td>
                <td class="py-3 px-6">{schoolData.halfDayKindergarten}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">Total F.T.E. Enrolment</td>
                <td class="py-3 px-6">{schoolData.totalFTE}</td>
            </tr>
            <tr class="border-t border-gray-300 dark:border-gray-600">
                <td class="py-3 px-6 font-medium">Membership Fees</td>
                <td class="py-3 px-6">${schoolData.membershipFees}</td>
            </tr>
        </tbody>
    </table>

    <!-- Generate Stripe Invoice Button -->
    <button
        class="w-full mt-6 py-3 px-6 bg-blue-500 text-white font-bold rounded-md hover:bg-blue-600"
        onclick="generateStripeInvoice()"
    >
        Generate Stripe Invoice
    </button>
</div>

<script>
    function generateStripeInvoice() {
        const total = parseFloat(schoolData.membershipFees) || 0;

        fetch("/api/create-stripe-invoice", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ schoolId: schoolData.schoolId, total }),
        })
            .then((response) => response.json())
            .then((result) => {
                if (result.success) {
                    alert("Stripe Invoice Created Successfully!");
                } else {
                    alert("Failed to create Stripe Invoice");
                }
            })
            .catch((error) => {
                console.error("Error creating Stripe invoice:", error);
            });
    }
</script>
